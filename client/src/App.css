.App {
  min-height: 100vh;
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  position: relative;
  overflow-x: hidden;
}

.App::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: 
    radial-gradient(circle at 20% 80%, rgba(120, 119, 198, 0.3) 0%, transparent 50%),
    radial-gradient(circle at 80% 20%, rgba(255, 119, 198, 0.3) 0%, transparent 50%),
    radial-gradient(circle at 40% 40%, rgba(120, 219, 255, 0.2) 0%, transparent 50%);
  pointer-events: none;
}

/* Loading spinner */
.animate-spin {
  animation: spin 1s linear infinite;
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

/* Card flip animation */
.card-flip {
  perspective: 1000px;
}

.card-flip-inner {
  position: relative;
  width: 100%;
  height: 100%;
  text-align: center;
  transition: transform 0.6s;
  transform-style: preserve-3d;
}

.card-flip.flipped .card-flip-inner {
  transform: rotateY(180deg);
}

.card-flip-front,
.card-flip-back {
  position: absolute;
  width: 100%;
  height: 100%;
  backface-visibility: hidden;
}

.card-flip-back {
  transform: rotateY(180deg);
}

/* Task card animations */
.task-card {
  transition: all 0.3s ease-in-out;
}

.task-card:hover {
  transform: translateY(-4px);
  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);
}

.task-card.priority-high {
  border-left: 4px solid var(--danger-color);
}

.task-card.priority-medium {
  border-left: 4px solid var(--warning-color);
}

.task-card.priority-low {
  border-left: 4px solid var(--success-color);
}

.task-card.priority-critical {
  border-left: 4px solid var(--danger-color);
  background: linear-gradient(135deg, #fef2f2 0%, #fee2e2 100%);
  animation: pulse 2s infinite;
}

/* Status indicators */
.status-todo {
  background: linear-gradient(135deg, #f1f5f9 0%, #e2e8f0 100%);
  color: var(--text-secondary);
}

.status-in-progress {
  background: linear-gradient(135deg, #fef3c7 0%, #fde68a 100%);
  color: #92400e;
}

.status-done {
  background: linear-gradient(135deg, #d1fae5 0%, #a7f3d0 100%);
  color: #065f46;
}

/* User avatar */
.user-avatar {
  width: 32px;
  height: 32px;
  border-radius: 50%;
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  display: flex;
  align-items: center;
  justify-content: center;
  color: white;
  font-weight: 600;
  font-size: var(--font-size-sm);
  box-shadow: 0 4px 8px rgba(102, 126, 234, 0.3);
  transition: all 0.2s ease-in-out;
}

.user-avatar:hover {
  transform: scale(1.1);
  box-shadow: 0 6px 12px rgba(102, 126, 234, 0.4);
}

.user-avatar.online {
  position: relative;
}

.user-avatar.online::after {
  content: '';
  position: absolute;
  bottom: 0;
  right: 0;
  width: 8px;
  height: 8px;
  background: linear-gradient(135deg, #10b981 0%, #059669 100%);
  border: 2px solid white;
  border-radius: 50%;
  box-shadow: 0 2px 4px rgba(16, 185, 129, 0.3);
}

/* Activity log animations */
.activity-item {
  animation: slideInFromRight 0.3s ease-out;
}

@keyframes slideInFromRight {
  from {
    opacity: 0;
    transform: translateX(20px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

/* Conflict resolution modal */
.conflict-modal {
  animation: fadeInScale 0.3s ease-out;
}

@keyframes fadeInScale {
  from {
    opacity: 0;
    transform: scale(0.9);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

/* Responsive design */
@media (max-width: 768px) {
  .kanban-board {
    flex-direction: column;
    gap: var(--spacing-4);
  }
  
  .kanban-column {
    min-height: 200px;
  }
  
  .task-card {
    margin-bottom: var(--spacing-2);
  }
}

/* Custom scrollbar for activity log */
.activity-log {
  scrollbar-width: thin;
  scrollbar-color: var(--text-muted) var(--bg-tertiary);
}

.activity-log::-webkit-scrollbar {
  width: 6px;
}

.activity-log::-webkit-scrollbar-track {
  background: linear-gradient(135deg, #f1f5f9 0%, #e2e8f0 100%);
  border-radius: 3px;
}

.activity-log::-webkit-scrollbar-thumb {
  background: linear-gradient(135deg, #cbd5e1 0%, #94a3b8 100%);
  border-radius: 3px;
  transition: all 0.2s ease-in-out;
}

.activity-log::-webkit-scrollbar-thumb:hover {
  background: linear-gradient(135deg, #94a3b8 0%, #64748b 100%);
}

/* Smart assign button animation */
.smart-assign-btn {
  position: relative;
  overflow: hidden;
}

.smart-assign-btn::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
  transition: left 0.5s;
}

.smart-assign-btn:hover::before {
  left: 100%;
}

/* Floating particles animation */
@keyframes float {
  0%, 100% {
    transform: translateY(0px) rotate(0deg);
  }
  50% {
    transform: translateY(-20px) rotate(180deg);
  }
}

.floating-particle {
  position: absolute;
  width: 4px;
  height: 4px;
  background: rgba(255, 255, 255, 0.3);
  border-radius: 50%;
  animation: float 6s ease-in-out infinite;
  pointer-events: none;
}

.floating-particle:nth-child(1) {
  top: 10%;
  left: 10%;
  animation-delay: 0s;
}

.floating-particle:nth-child(2) {
  top: 20%;
  right: 20%;
  animation-delay: 2s;
}

.floating-particle:nth-child(3) {
  bottom: 30%;
  left: 30%;
  animation-delay: 4s;
}

.floating-particle:nth-child(4) {
  bottom: 20%;
  right: 10%;
  animation-delay: 1s;
}

.floating-particle:nth-child(5) {
  top: 50%;
  left: 50%;
  animation-delay: 3s;
}

/* Priority badges */
.priority-badge {
  padding: 2px 8px;
  border-radius: 12px;
  font-size: var(--font-size-sm);
  font-weight: 500;
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

.priority-badge.low {
  background-color: var(--success-color);
  color: white;
}

.priority-badge.medium {
  background-color: var(--warning-color);
  color: white;
}

.priority-badge.high {
  background-color: var(--danger-color);
  color: white;
}

.priority-badge.critical {
  background-color: var(--danger-color);
  color: white;
  animation: pulse 2s infinite;
}

/* Due date styling */
.due-date {
  font-size: var(--font-size-sm);
  color: var(--text-secondary);
}

.due-date.overdue {
  color: var(--danger-color);
  font-weight: 600;
}

.due-date.today {
  color: var(--warning-color);
  font-weight: 600;
}

/* Tags styling */
.task-tags {
  display: flex;
  flex-wrap: wrap;
  gap: 4px;
  margin-top: var(--spacing-2);
}

.task-tag {
  padding: 2px 6px;
  background-color: var(--bg-tertiary);
  color: var(--text-secondary);
  border-radius: 4px;
  font-size: var(--font-size-sm);
  border: 1px solid var(--border-color);
} 